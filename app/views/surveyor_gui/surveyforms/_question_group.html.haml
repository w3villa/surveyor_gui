- @question_no = @question_no + 1 if f.object.id && f.object.question_type != 'Label'
= content_tag(:div, f.object, class: f.object.class.name.underscore, id: "#{f.object.class.name.underscore}_#{f.object.try(:id)}") do
  %fieldset{:class => "fields questions #{f.object.is_mandatory ? 'mandatory_questions' : 'optional_questions'} #{!@survey_locked && (f.object.modifiable) ? '' : 'not_modifiable'}"}
    .inner_question
      / if dependencies, notify the user with a highlighted message at the top of the question
      - if f.object.question_group.dependent?
        %span.question_logic_notifier
          / list_dependencies tells the user which other questions determine whether this one is displayed
          = list_dependencies(f.object.question_group) if f.object.question_group.dependent?
          \.
          %br/
      / display the button bar unless a user has already submitted responses, thus locking the survey, or
      / the survey is explicitly marked not modifiable (e.g., an administrator locks it).
      - if !@survey_locked && (f.object.modifiable?)
        - unless params[:action] == "show"
          %span{style: "font-size:20px;margin:15px 10px 0 0"}
            %i.fa.fa-bars
            &nbsp
        %span.question_button_bar
          -if [:group_inline, :group_default, :repeater].include?(f.object.question_group.question_type_id)
            = link_to "Edit Question", "/companies/courses/#{params[:course_id]}/lessons/#{ params[:lesson_id]}/topics/#{params[:topic_id]}/quiz/survey_section/#{f.object.survey_section_id}/question_groups/#{f.object.question_group_id}/edit", class: "btn btn-primary", :target=>'_self'
          -else
            = link_to "Edit Question", "/companies/courses/#{params[:course_id]}/lessons/#{ params[:lesson_id]}/topics/#{params[:topic_id]}/quiz/questions/#{ f.object.id}/edit", class: "btn btn-primary", :target=>'_self'


          %button.btn.btn-primary.cut-question#cut_question{:type => "button"} Cut Question

          %button.btn.btn-primary#delete_question{"data-question_url" => surveyor_gui.question_url(f.object.id), "data-replace_form_surveyform_url" => surveyor_gui.replace_form_surveyform_url(id: f.object.survey_section.survey.id, survey_section_id: f.object.survey_section_id), :type => "button"} Delete Question
          %span{:style => "float:right;"}
            - if f.object.question_group.dependent?
              %button.btn.btn-primary#delete_logic{"data-dependency_url" => surveyor_gui.dependency_url(f.object.id), "data-question_id" => f.object.id.to_s, "data-replace_question_url" => surveyor_gui.replace_question_surveyform_path(:question_id => f.object.id), :type => "button"} Delete Logic
              %button.btn.btn-primary#edit_logic{"data-url" => surveyor_gui.edit_dependency_url(f.object.id), :type => "button"} Edit Logic
            - elsif f.object.survey_section.survey.questions.where("question_group_id != #{f.object.question_group.id} || question_group_id is null").any?
              %button.btn.btn-primary#add_logic{"data-url" => surveyor_gui.new_dependency_url(:id=>f.object.id), :type => "button"} Add Logic
      %br/
      %br/
      = render "surveyor_gui/surveyforms/question_name_and_number", question_type: f.object.question_type, text: f.object.question_group.text, question: f.object.question_group

      %div{:class => "question_group #{question_group_class(f.object)} #{f.object.repeater? ? "repeater" : nil}"}
        .question_group_header
          %span.question_group_heading
            = question_group_heading(f)
        = render_one_group ss
  - if !@survey_locked && (f.object.modifiable?)
    .question_buttons_bottom
      %button.btn.btn-primary.paste-question#paste_question{"data-question-id" => f.object.id, :type => "button", style: "display:none"} Paste Question